{"version":3,"sources":["components/RegisterComponent/RegisterComponent.module.scss","components/LoginComponent/LoginComponent.module.scss","pages/AuthorizationPage/AuthorizationPage.module.scss","components/SmokeButton/SmokeButton.jsx","components/SmokeButton/index.js","actions/index.js","components/LoginComponent/LoginComponent.jsx","components/LoginComponent/index.js","components/RegisterComponent/RegisterComponent.jsx","components/RegisterComponent/index.js","pages/AuthorizationPage/index.js","pages/AuthorizationPage/AuthorizationPage.jsx","App/App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["module","exports","SmokeButton","props","handleButtonClick","dispatchLoadActivities","state","onClick","this","JSON","stringify","activity_levels","Component","connect","store","dispatch","console","log","a","Axios","get","then","response","type","payload","catch","err","LoginComponent","handleInput","event","target","value","name","setState","handleLoginSubmit","e","preventDefault","email","length","error","includes","dispatchLoginSubmit","handleRegisterClick","isRegistered","password","prevProps","registeredUserEmail","className","styles","form_li","imgContainer","src","alt","login_icon_img","onChange","placeholder","form_input","login_button","options","additionalOptions","notAMember","options_span","data","post","actionsLoginSubmit","RegisterComponent","handleRegister","formData","formErrors","dispatchRegister","handleLoginClick","height","weight","activity_level_id","birth_date","gender_id","user_tier_id","goal_id","activity_level","actionsRegister","AuthorizationPage","App","handleHidePlayground","toggle","playground","handleLogout","dispatchLogout","isLoggedIn","Boolean","window","location","hostname","match","initialStore","reducer","action","Object","assign","formInfo","session","id","user_status_id","localStorage","setItem","removeItem","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","ReduxThunk","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.390d195f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterComponent\":\"RegisterComponent_RegisterComponent__NlhpB\",\"form_li\":\"RegisterComponent_form_li__1lWu2\",\"form_input\":\"RegisterComponent_form_input__13HAa\",\"error\":\"RegisterComponent_error__v_i_K\",\"login_button\":\"RegisterComponent_login_button__bfja5\",\"login_icon_img\":\"RegisterComponent_login_icon_img__2S_UJ\",\"imgContainer\":\"RegisterComponent_imgContainer__3hdDS\",\"options\":\"RegisterComponent_options__3tkVk\",\"notAMember\":\"RegisterComponent_notAMember__Gh38W\",\"options_span\":\"RegisterComponent_options_span__3ypfn\",\"loginImg\":\"RegisterComponent_loginImg__3h8wm\",\"additionalOptions\":\"RegisterComponent_additionalOptions__2TfML\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginComponent\":\"LoginComponent_LoginComponent__3YGFZ\",\"form_li\":\"LoginComponent_form_li___SRy0\",\"form_input\":\"LoginComponent_form_input__2hgcs\",\"error\":\"LoginComponent_error__1oyk3\",\"login_button\":\"LoginComponent_login_button__1RbaU\",\"login_icon_img\":\"LoginComponent_login_icon_img__FeQ8_\",\"imgContainer\":\"LoginComponent_imgContainer__3ma1c\",\"options\":\"LoginComponent_options__35dEY\",\"notAMember\":\"LoginComponent_notAMember__63f6z\",\"options_span\":\"LoginComponent_options_span__3hmJS\",\"loginImg\":\"LoginComponent_loginImg__1W3MH\",\"additionalOptions\":\"LoginComponent_additionalOptions__3tm9F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AuthorizationPage\":\"AuthorizationPage_AuthorizationPage__13qny\"};","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { actionsLoadActivity } from \"../../actions\";\n// import styles from \"./SmokeButton.module.scss\";\n\nclass SmokeButton extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleButtonClick = () => {\n    return this.props.dispatchLoadActivities();\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.handleButtonClick}>Return Activity Levels</button>\n        <div>{JSON.stringify(this.props.activity_levels)}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    activity_levels: store.activity_levels\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLoadActivities: () => {\n      console.log(\"dispatchLoadActivities\");\n      return dispatch(actionsLoadActivity());\n    }\n  };\n};\n\nSmokeButton = connect(mapStateToProps, mapDispatchToProps)(SmokeButton);\n\nexport default SmokeButton;\n","import SmokeButton from \"./SmokeButton\";\n\nexport default SmokeButton;\n","import Axios from \"axios\";\n\nexport const LOAD_ACTIVITIES = \"LOAD_ACTIVITIES\";\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const REGISTER = \"REGISTER\";\n\nexport const actionsLoadActivity = () => async dispatch => {\n  await Axios.get(\"/api/activity_levels\")\n    .then(response => {\n      return dispatch({\n        type: LOAD_ACTIVITIES,\n        payload: response\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsLoginSubmit = data => async dispatch => {\n  await Axios.post(\"/api/auth/login\", data)\n    .then(response => {\n      return dispatch({\n        type: LOGIN,\n        payload: response.data\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsRegister = data => async dispatch => {\n  await Axios.post(\"/api/auth/register\", data)\n    .then(response => {\n      return dispatch({\n        type: REGISTER,\n        payload: response.data\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const actionsLogout = () => async dispatch => {\n  await Axios.get(\"/api/auth/logout\")\n    .then(response => {\n      return dispatch({\n        type: LOGOUT,\n        payload: response.data\n      });\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./LoginComponent.module.scss\";\nimport { actionsLoginSubmit } from \"../../actions\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      error: false\n    };\n  }\n\n  handleInput = event => {\n    const { value, name } = event.target;\n    const state = { ...this.state };\n    state[name] = value;\n    this.setState(state);\n  };\n\n  handleLoginSubmit = e => {\n    e.preventDefault();\n\n    let { email } = this.state;\n\n    if (!email) {\n      return this.setState({ error: true });\n    } else if (email.length < 3) {\n      return this.setState({ error: true });\n    } else if (!email.includes(\"@\")) {\n      return this.setState({ error: true });\n    } else {\n      return this.props.dispatchLoginSubmit(this.state);\n    }\n  };\n\n  handleRegisterClick = () => {\n    return this.props.isRegistered();\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.registeredUserEmail !== this.props.registeredUserEmail) {\n      return this.setState({ email: this.props.registeredUserEmail });\n    }\n  }\n\n  render() {\n    return (\n      <div className={styles.LoginComponent}>\n        <form>\n          <ul>\n            <li className={styles.form_li}>\n              <div className={styles.imgContainer}>\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/25/25236.svg\"\n                  alt=\"email\"\n                  className={styles.login_icon_img}\n                />\n              </div>\n              <input\n                type=\"text\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleInput}\n                placeholder=\"Your email\"\n                className={styles.form_input}\n              />\n            </li>\n            {this.state.error ? (\n              <li className={styles.error}>* user not found</li>\n            ) : null}\n            <li className={styles.form_li}>\n              <div className={styles.imgContainer}>\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/25/25239.svg\"\n                  alt=\"password\"\n                  className={styles.login_icon_img}\n                />\n              </div>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInput}\n                placeholder=\"Your password\"\n                className={styles.form_input}\n              />\n            </li>\n          </ul>\n\n          <button\n            onClick={this.handleLoginSubmit}\n            className={styles.login_button}\n          >\n            Login{\" \"}\n          </button>\n        </form>\n\n        <div className={styles.options}>\n          <div className={styles.additionalOptions}>\n            <div className={styles.notAMember}>\n              <p>\n                Not a member?{\" \"}\n                <span\n                  className={styles.options_span}\n                  onClick={this.handleRegisterClick}\n                >\n                  Sign up\n                </span>\n              </p>\n            </div>\n            <div className={styles.notAMember}>\n              <p>\n                Forgot{\" \"}\n                <span\n                  className={styles.options_span}\n                  onClick={this.handleRegisterClick}\n                >\n                  Password\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    registeredUserEmail: store.registeredUserEmail\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLoginSubmit: data => {\n      return dispatch(actionsLoginSubmit(data));\n    }\n  };\n};\n\nLoginComponent = connect(mapStateToProps, mapDispatchToProps)(LoginComponent);\n\nexport default LoginComponent;\n","import LoginComponent from \"./LoginComponent\";\nexport default LoginComponent;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./RegisterComponent.module.scss\";\nimport { actionsRegister } from \"../../actions\";\n\nclass RegisterComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      \"confirm password\": \"\",\n      height: \"5'10\",\n      weight: 150,\n      activity_level_id: 1,\n      birth_date: \"1999-01-01\",\n      gender_id: 1,\n      user_tier_id: 1,\n      goal_id: 1,\n      formErrors: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        \"confirm password\": \"\",\n        height: \"\",\n        weight: \"\",\n        activity_level: \"\",\n        birth_date: \"\"\n      }\n    };\n  }\n\n  handleInput = event => {\n    const { value, name } = event.target;\n    const state = { ...this.state };\n    state[name] = value;\n    this.setState(state);\n  };\n\n  handleRegister = e => {\n    e.preventDefault();\n\n    let formData = { ...this.state };\n    delete formData.formErrors;\n    delete formData[\"confirm password\"];\n    this.props.dispatchRegister(formData);\n    return this.props.isRegistered();\n  };\n\n  handleLoginClick = () => {\n    return this.props.isRegistered();\n  };\n\n  render() {\n    return (\n      <div className={styles.RegisterComponent}>\n        <form>\n          <ul>\n            {/* name */}\n            <li className={styles.form_li}>\n              <div className={styles.imgContainer}>\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/74/74472.svg\"\n                  alt=\"name\"\n                  className={styles.login_icon_img}\n                />\n              </div>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handleInput}\n                placeholder=\"Your name\"\n                className={styles.form_input}\n              />\n            </li>\n            {/* email */}\n            <li className={styles.form_li}>\n              <div className={styles.imgContainer}>\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/25/25236.svg\"\n                  alt=\"email\"\n                  className={styles.login_icon_img}\n                />\n              </div>\n              <input\n                type=\"text\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleInput}\n                placeholder=\"average.joe@fitness.com\"\n                className={styles.form_input}\n              />\n            </li>\n            {/* password */}\n            <li className={styles.form_li}>\n              <div className={styles.imgContainer}>\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/25/25239.svg\"\n                  alt=\"password\"\n                  className={styles.login_icon_img}\n                />\n              </div>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInput}\n                placeholder=\"Password (must be 8-20 characters)\"\n                className={styles.form_input}\n              />\n            </li>\n            {/* confirm password */}\n            <li className={styles.form_li}>\n              <div className={styles.imgContainer}>\n                <img\n                  src=\"https://image.flaticon.com/icons/svg/25/25239.svg\"\n                  alt=\"password\"\n                  className={styles.login_icon_img}\n                />\n              </div>\n              <input\n                type=\"password\"\n                name=\"confirm password\"\n                value={this.state[\"confirm password\"]}\n                onChange={this.handleInput}\n                placeholder=\"Confirm your password\"\n                className={styles.form_input}\n              />\n            </li>\n          </ul>\n\n          <button onClick={this.handleRegister} className={styles.login_button}>\n            Register\n          </button>\n        </form>\n\n        <div className={styles.options}>\n          <div className={styles.additionalOptions}>\n            <div className={styles.notAMember}>\n              <p>\n                Already a member?{\" \"}\n                <span\n                  className={styles.options_span}\n                  onClick={this.handleLoginClick}\n                >\n                  Login\n                </span>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchRegister: data => {\n      return dispatch(actionsRegister(data));\n    }\n  };\n};\n\nRegisterComponent = connect(null, mapDispatchToProps)(RegisterComponent);\n\nexport default RegisterComponent;\n","import RegisterComponent from \"./RegisterComponent\";\nexport default RegisterComponent;\n","import AuthorizationPage from \"./AuthorizationPage\";\nexport default AuthorizationPage;\n","import React, { Component } from \"react\";\nimport styles from \"./AuthorizationPage.module.scss\";\nimport LoginComponent from \"../../components/LoginComponent\";\nimport RegisterComponent from \"../../components/RegisterComponent\";\n\nclass AuthorizationPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isRegistered: false\n    };\n  }\n\n  isRegistered = () => {\n    return this.setState({ isRegistered: !this.state.isRegistered });\n  };\n\n  render() {\n    return (\n      <div className={styles.AuthorizationPage}>\n        {!this.state.isRegistered ? (\n          <RegisterComponent\n            isRegistered={this.isRegistered}\n          ></RegisterComponent>\n        ) : (\n          <LoginComponent isRegistered={this.isRegistered}></LoginComponent>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AuthorizationPage;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\n\nimport { actionsLogout } from \"../actions\";\n\nimport SmokeButton from \"../components/SmokeButton\";\nimport AuthorizationPage from \"../pages/AuthorizationPage\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playground: true\n    };\n  }\n\n  handleHidePlayground = () => {\n    let toggle = this.state.playground;\n    return this.setState({ playground: !toggle });\n  };\n\n  handleLogout = () => {\n    return this.props.dispatchLogout();\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.isLoggedIn ? (\n          <button onClick={this.handleLogout}>Log out</button>\n        ) : null}\n        <AuthorizationPage></AuthorizationPage>\n\n        {/* Below is a section for playing with new components, that can be hidden or shown by clicking the button below in the App.  I thought it might help to have it separate until new components are ready to be added to their appropriate place? idk... Daniel */}\n        <button onClick={this.handleHidePlayground}>\n          {this.state.playground ? \"Hide Playground\" : \"Show Playground\"}\n        </button>\n        {this.state.playground ? (\n          <div className=\"component_playground\">\n            <SmokeButton></SmokeButton>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    isLoggedIn: store.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatchLogout: () => {\n      return dispatch(actionsLogout());\n    }\n  };\n};\n\nApp = connect(mapStateToProps, mapDispatchToProps)(App);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOAD_ACTIVITIES, REGISTER, LOGIN, LOGOUT } from \"../actions\";\n\nconst initialStore = {\n  activity_levels: [],\n  isLoggedIn: false\n};\n\nlet reducer = (store = initialStore, action) => {\n  console.log(action.payload);\n\n  switch (action.type) {\n    case LOAD_ACTIVITIES:\n      return Object.assign({}, store, { activity_levels: action.payload.data });\n\n    case REGISTER:\n      return Object.assign({}, store, {\n        registeredUserEmail: action.payload.formInfo.email\n      });\n\n    case LOGIN:\n      let { email, id, user_status_id } = action.payload.session;\n      let session = Object.assign(\n        {},\n        { email: email, id: id, user_status_id: user_status_id }\n      );\n      localStorage.setItem(\"session\", JSON.stringify(session));\n      return Object.assign({}, store, { isLoggedIn: true });\n\n    case LOGOUT:\n      localStorage.removeItem(\"session\");\n      return Object.assign({}, store, { isLoggedIn: false });\n\n    default:\n      return store;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n//redux dependencies\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport reducer from \"./reducers\";\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension's options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(ReduxThunk)); //applyMiddleware to connect redux\n\nconst store = createStore(reducer, enhancer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}